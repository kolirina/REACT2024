{
  "version": 3,
  "sources": ["../../../src/routes/animals.tsx", "../../../src/components/Search.tsx", "../../../src/components/SearchResults.tsx", "../../../src/components/Checkbox.tsx", "../../../src/components/Pagination.tsx", "../../../src/utils/csx.tsx", "../../../src/components/Flyout.tsx", "../../../src/services/fetchAnimalData.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"src\\\\\\\\routes\\\\\\\\animals.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"src\\\\routes\\\\animals.tsx\");\n  import.meta.hot.lastModified = \"1723415839449.5786\";\n}\n// REMIX HMR END\n\nimport React, { useEffect, useState } from 'react';\nimport { useLoaderData, Outlet, useNavigate } from '@remix-run/react';\nimport { json } from '@remix-run/node';\nimport { useDispatch } from 'react-redux';\nimport { setPage, setTotalPages } from '../slices/paginationSlice';\nimport { useTheme, useThemeUpdate } from '../hooks/useTheme';\nimport Search from '../components/Search';\nimport SearchResults from '../components/SearchResults';\nimport Pagination from '../components/Pagination';\nimport Flyout from '../components/Flyout';\nimport { fetchAnimalData } from '../services/fetchAnimalData';\nexport const loader = async ({\n  request\n}) => {\n  const url = new URL(request.url);\n  let searchTerm = url.searchParams.get('search') || '';\n  if (typeof window !== 'undefined') {\n    searchTerm = localStorage.getItem('searchTerm') || '';\n  }\n  const page = parseInt(url.searchParams.get('page') || '1', 10);\n  const {\n    initialAnimals,\n    totalPages\n  } = await fetchAnimalData(searchTerm, page);\n  return json({\n    animals: initialAnimals,\n    searchTerm,\n    page,\n    totalPages\n  });\n};\nexport default function Index() {\n  _s();\n  const {\n    animals,\n    searchTerm,\n    page,\n    totalPages\n  } = useLoaderData();\n  const dispatch = useDispatch();\n  const darkTheme = useTheme();\n  const toggleTheme = useThemeUpdate();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    setIsLoading(false);\n    dispatch(setPage(page));\n    dispatch(setTotalPages(totalPages));\n  }, [page, totalPages, dispatch]);\n  const handleSearch = term => {\n    setIsLoading(true);\n    navigate(`?search=${encodeURIComponent(term)}&page=1`);\n  };\n  return <div className={darkTheme ? 'dark-MainWrapper' : 'light-MainWrapper'}>\r\n      <button onClick={toggleTheme} className=\"themeButton\">\r\n        {darkTheme ? '\uD83C\uDF1E Light Mode' : '\uD83C\uDF1C Dark Mode'}\r\n      </button>\r\n      <div data-testid=\"home\" className={darkTheme ? 'dark-App' : 'light-App'}>\r\n        <div className=\"top-section\">\r\n          <Search onSearch={handleSearch} defaultValue={searchTerm} />\r\n        </div>\r\n        <div className=\"content-section\">\r\n          <div className=\"left-section\">\r\n            {isLoading ? <div className=\"loader-container\">\r\n                <div className=\"loader\">Loading...</div>\r\n              </div> : animals.length > 0 ? <SearchResults results={animals} /> : <div className=\"no-results\">\r\n                No animals found matching your search.\r\n              </div>}\r\n            <Pagination currentPage={page} totalPages={totalPages} />\r\n          </div>\r\n          <div className=\"right-section\">\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n        <Flyout />\r\n      </div>\r\n    </div>;\n}\n_s(Index, \"HgBQJsT4kSkh2WJmn2oJXTw6sME=\", false, function () {\n  return [useLoaderData, useDispatch, useTheme, useThemeUpdate, useNavigate];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"src\\\\\\\\components\\\\\\\\Search.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"src\\\\components\\\\Search.tsx\");\n  import.meta.hot.lastModified = \"1723415839443.5994\";\n}\n// REMIX HMR END\n\nimport React, { useState, useEffect } from 'react';\nconst Search = ({\n  onSearch,\n  defaultValue = ''\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(defaultValue);\n  useEffect(() => {\n    setSearchTerm(defaultValue);\n  }, [defaultValue]);\n  const handleSubmit = () => {\n    const trimmedSearchTerm = searchTerm.trim();\n    setSearchTerm(trimmedSearchTerm);\n    localStorage.setItem('searchTerm', trimmedSearchTerm);\n    onSearch(trimmedSearchTerm);\n  };\n  const handleInputChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  return <div className=\"top-section\">\r\n      <input type=\"text\" value={searchTerm} onChange={handleInputChange} placeholder=\"Find an Animal \uD83D\uDD0D\" />\r\n      <button onClick={handleSubmit}>Search</button>\r\n    </div>;\n};\n_s(Search, \"xNWvjwlTVPlJaZfEB3WKBewn6YE=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"src\\\\\\\\components\\\\\\\\SearchResults.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"src\\\\components\\\\SearchResults.tsx\");\n}\n// REMIX HMR END\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Checkbox from './Checkbox';\nimport { useTheme } from '../hooks/useTheme';\nimport \"../App.css?__remix_sideEffect__\";\nimport { useSearchParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nconst SearchResults = ({\n  results\n}) => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const searchTerm = searchParams.get('search') || '';\n  const darkTheme = useTheme();\n  const currentPage = useSelector(state => state.pagination.currentPage);\n  return <div className=\"search-results\">\r\n      <h2>Search Results</h2>\r\n      {results.length > 0 ? <ul>\r\n          {results.map(result => <li key={result.uid}>\r\n              <div style={{\n          display: 'flex',\n          alignItems: 'center'\n        }}>\r\n                <Checkbox item={result} />\r\n                <Link to={`/animals/${result.uid}?search=${searchTerm}&page=${currentPage}`} className={darkTheme ? 'dark-animalLink' : 'light-animalLink'}>\n              \r\n                  <strong>{result.name}</strong>\r\n                </Link>\r\n              </div>\r\n            </li>)}\r\n        </ul> : <div>No animal found. Try again\uD83D\uDE38</div>}\n      \r\n    </div>;\n};\n_s(SearchResults, \"cC/mzHxXB26Lkp38L91HXmmQ31A=\", false, function () {\n  return [useSearchParams, useTheme, useSelector];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"src\\\\\\\\components\\\\\\\\Checkbox.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"src\\\\components\\\\Checkbox.tsx\");\n  import.meta.hot.lastModified = \"1723413488773.386\";\n}\n// REMIX HMR END\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleItem } from '../slices/selectedItemsSlice';\nconst Checkbox = ({\n  item\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const selectedItems = useSelector(state => state.selectedItems.items);\n  const isChecked = selectedItems.some(i => i.uid === item.uid);\n  const handleChange = () => {\n    dispatch(toggleItem(item));\n  };\n  return <input className=\"light-checkbox\" type=\"checkbox\" checked={isChecked} onChange={handleChange} />;\n};\n_s(Checkbox, \"FzHVeXltEM4xjwFBOPqkwW7TSFI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Checkbox;\nexport default Checkbox;\nvar _c;\n$RefreshReg$(_c, \"Checkbox\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"src\\\\\\\\components\\\\\\\\Pagination.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"src\\\\components\\\\Pagination.tsx\");\n  import.meta.hot.lastModified = \"1723415839439.6128\";\n}\n// REMIX HMR END\n\nimport React from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useTheme } from '../hooks/useTheme';\nconst Pagination = ({\n  currentPage,\n  totalPages\n}) => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const searchTerm = searchParams.get('search') || '';\n  const darkTheme = useTheme();\n  return <div className=\"pagination\">\r\n      {currentPage > 1 && <Link to={`?search=${searchTerm}&page=${currentPage - 1}`} className={darkTheme ? 'dark-link' : 'light-link'}>\r\n          Previous\r\n        </Link>}\r\n      <span>\r\n        Page {currentPage} of {totalPages}\r\n      </span>\r\n      {currentPage < totalPages && <Link to={`?search=${searchTerm}&page=${currentPage + 1}`} className={darkTheme ? 'dark-link' : 'light-link'}>\r\n          Next\r\n        </Link>}\r\n    </div>;\n};\n_s(Pagination, \"B2/RqNsUrbCJe7vn9VkGkdUFv2c=\", false, function () {\n  return [useSearchParams, useTheme];\n});\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"src\\\\utils\\\\csx.tsx\"\n);\nimport.meta.hot.lastModified = \"1723380781666.1438\";\n}\n// REMIX HMR END\n\nimport { Animal } from '../types';\r\n\r\nexport const downloadCSV = (items: Animal[]) => {\r\n  const headers = ['UID', 'Name', 'Description'];\r\n  const rows = items.map((item) => {\r\n    const descriptions: string[] = [];\r\n    if (item.earthAnimal) descriptions.push('Earth Animal');\r\n    if (item.earthInsect) descriptions.push('Earth Insect');\r\n    if (item.avian) descriptions.push('Avian');\r\n    if (item.canine) descriptions.push('Canine');\r\n    if (item.feline) descriptions.push('Feline');\r\n\r\n    if (descriptions.length === 0) {\r\n      descriptions.push('an infinitely cute animal');\r\n    }\r\n\r\n    return [item.uid, item.name, descriptions.join(', ')];\r\n  });\r\n\r\n  const csvContent = [headers, ...rows].map((e) => e.join(',')).join('\\n');\r\n\r\n  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n\r\n  const url = URL.createObjectURL(blob);\r\n\r\n  const link = document.createElement('a');\r\n  link.href = url;\r\n  link.download = `${items.length}_animals.csv`;\r\n\r\n  link.click();\r\n  URL.revokeObjectURL(url);\r\n};\r\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"src\\\\\\\\components\\\\\\\\Flyout.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"src\\\\components\\\\Flyout.tsx\");\n  import.meta.hot.lastModified = \"1723415839438.615\";\n}\n// REMIX HMR END\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { unselectAll } from '../slices/selectedItemsSlice';\nimport { downloadCSV } from '../utils/csx';\nimport { useTheme } from '../hooks/useTheme';\nconst Flyout = () => {\n  _s();\n  const darkTheme = useTheme();\n  const dispatch = useDispatch();\n  const selectedItems = useSelector(state => state.selectedItems.items);\n  const handleUnselectAll = () => {\n    dispatch(unselectAll());\n  };\n  const handleDownload = () => {\n    downloadCSV(selectedItems);\n  };\n  if (selectedItems.length === 0) return null;\n  return <div className={darkTheme ? 'dark-flyout' : 'light-flyout'}>\r\n      <span>{selectedItems.length} animals are selected</span>\r\n      <button onClick={handleUnselectAll}>Unselect all</button>\r\n      <button onClick={handleDownload}>Download</button>\r\n    </div>;\n};\n_s(Flyout, \"QnFfO+E3Qw1woyQDp+nG4GuXrOs=\", false, function () {\n  return [useTheme, useDispatch, useSelector];\n});\n_c = Flyout;\nexport default Flyout;\nvar _c;\n$RefreshReg$(_c, \"Flyout\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"src\\\\services\\\\fetchAnimalData.tsx\"\n);\nimport.meta.hot.lastModified = \"1723415839450.5752\";\n}\n// REMIX HMR END\n\nimport { SEARCH_URL, PAGE_SIZE } from '../constants';\r\nimport { Animal } from '../types';\r\n\r\nexport const fetchAnimalData = async (\r\n  searchTerm: string = '',\r\n  page: number = 1,\r\n): Promise<{\r\n  initialSearchTerm: string;\r\n  initialPage: number;\r\n  initialAnimals: Animal[];\r\n  totalPages: number;\r\n}> => {\r\n  try {\r\n    if (typeof window !== 'undefined') {\r\n      const storedSearchTerm = localStorage.getItem('searchTerm');\r\n      if (storedSearchTerm) {\r\n        searchTerm = storedSearchTerm;\r\n      }\r\n    }\r\n\r\n    const response = await fetch(\r\n      `${SEARCH_URL}/search?pageNumber=${page - 1}&pageSize=${PAGE_SIZE}&title=${searchTerm}&name=${searchTerm}`,\r\n      {\r\n        method: 'POST',\r\n      },\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Error fetching data: ${response.statusText}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n\r\n    return {\r\n      initialSearchTerm: searchTerm,\r\n      initialPage: page,\r\n      initialAnimals: data.animals || [],\r\n      totalPages: data.page.totalPages || 1,\r\n    };\r\n  } catch (error) {\r\n    console.error('Failed to fetch animal data:', error);\r\n    return {\r\n      initialSearchTerm: searchTerm,\r\n      initialPage: page,\r\n      initialAnimals: [],\r\n      totalPages: 1,\r\n    };\r\n  }\r\n};\r\n"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_s", "_c"]
}
