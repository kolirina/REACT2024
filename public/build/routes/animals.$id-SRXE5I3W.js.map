{
  "version": 3,
  "sources": ["../../../src/routes/animals.$id.tsx", "../../../loaders/animalLoader.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"src\\\\\\\\routes\\\\\\\\animals.$id.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"src\\\\routes\\\\animals.$id.tsx\");\n  import.meta.hot.lastModified = \"1723415839448.5825\";\n}\n// REMIX HMR END\n\nimport React, { useEffect, useState } from 'react';\nimport { useLoaderData, Link } from '@remix-run/react';\nimport { useTheme } from '../hooks/useTheme';\nimport { animalLoader } from '../../loaders/animalLoader';\nexport const loader = animalLoader;\nexport default function AnimalDetails() {\n  _s();\n  const {\n    data\n  } = useLoaderData();\n  const [descriptions, setDescriptions] = useState([]);\n  const darkTheme = useTheme();\n  useEffect(() => {\n    if (data) {\n      const newDescriptions = [];\n      if (data.animal.earthAnimal) newDescriptions.push('Earth Animal \uD83D\uDC3E');\n      if (data.animal.earthInsect) newDescriptions.push('Earth Insect \uD83E\uDD97');\n      if (data.animal.avian) newDescriptions.push('Avian \uD83E\uDD9C');\n      if (data.animal.canine) newDescriptions.push('Canine \uD83D\uDC36');\n      if (data.animal.feline) newDescriptions.push('Feline \uD83D\uDE3A');\n      if (newDescriptions.length === 0) {\n        newDescriptions.push('an infinitely cute animal \uD83D\uDC7B');\n      }\n      setDescriptions(newDescriptions);\n    }\n  }, [data]);\n  return <div className=\"animal-details\">\r\n      {data ? <div>\r\n          <h2>{data.animal.name}</h2>\r\n          <p>{descriptions.join(', ')}</p>\r\n          <Link to={`/`} className={darkTheme ? 'dark-link' : 'light-link'}>\r\n            Hide Details\r\n          </Link>\r\n        </div> : <p>No details available</p>}\r\n    </div>;\n}\n_s(AnimalDetails, \"hXBAwvaZF5mfemR6mw9wMLpQunc=\", false, function () {\n  return [useLoaderData, useTheme];\n});\n_c = AnimalDetails;\nvar _c;\n$RefreshReg$(_c, \"AnimalDetails\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "import { json, LoaderFunction } from '@remix-run/node';\r\nimport { SEARCH_URL } from '../src/constants';\r\nimport { Animal } from '../src/types';\r\n\r\nexport const animalLoader: LoaderFunction = async ({ params }) => {\r\n  const { id } = params as { id: string };\r\n  const response = await fetch(`${SEARCH_URL}?uid=${id}`);\r\n\r\n  if (!response.ok) {\r\n    throw new Response('Error loading animal details', { status: 500 });\r\n  }\r\n\r\n  const data: Animal = await response.json();\r\n\r\n  return json({ data });\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,mBAA2C;;;ACrB3C,kBAAqC;;;ADiD3B;AAhDV,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,uCAAyC,EAAE;AAAA,EACpF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA8B;AAC9B,cAAY,IAAI,eAAe;AACjC;AAQe,SAAR,gBAAiC;AACtC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,QAAM,CAAC,cAAc,eAAe,QAAI,uBAAS,CAAC,CAAC;AACnD,QAAM,YAAY,SAAS;AAC3B,8BAAU,MAAM;AACd,QAAI,MAAM;AACR,YAAM,kBAAkB,CAAC;AACzB,UAAI,KAAK,OAAO;AAAa,wBAAgB,KAAK,wBAAiB;AACnE,UAAI,KAAK,OAAO;AAAa,wBAAgB,KAAK,wBAAiB;AACnE,UAAI,KAAK,OAAO;AAAO,wBAAgB,KAAK,iBAAU;AACtD,UAAI,KAAK,OAAO;AAAQ,wBAAgB,KAAK,kBAAW;AACxD,UAAI,KAAK,OAAO;AAAQ,wBAAgB,KAAK,kBAAW;AACxD,UAAI,gBAAgB,WAAW,GAAG;AAChC,wBAAgB,KAAK,qCAA8B;AAAA,MACrD;AACA,sBAAgB,eAAe;AAAA,IACjC;AAAA,EACF,GAAG,CAAC,IAAI,CAAC;AACT,SAAO,mDAAC,SAAI,WAAU,kBACjB,iBAAO,mDAAC,SACL;AAAA,uDAAC,QAAI,eAAK,OAAO,QAAjB;AAAA;AAAA;AAAA;AAAA,WAAsB;AAAA,IACtB,mDAAC,OAAG,uBAAa,KAAK,IAAI,KAA1B;AAAA;AAAA;AAAA;AAAA,WAA4B;AAAA,IAC5B,mDAAC,QAAK,IAAI,KAAK,WAAW,YAAY,cAAc,cAAc,4BAAlE;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OALI;AAAA;AAAA;AAAA;AAAA,SAMN,IAAS,mDAAC,OAAE,oCAAH;AAAA;AAAA;AAAA;AAAA,SAAuB,KAP/B;AAAA;AAAA;AAAA;AAAA,SAQL;AACJ;AACA,GAAG,eAAe,gCAAgC,OAAO,WAAY;AACnE,SAAO,CAAC,eAAe,QAAQ;AACjC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,eAAe;AAEhC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
